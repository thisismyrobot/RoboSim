Basic robot sim
===============

We need a map.

    >>> amap = [[0, 0, 0, 0, 0, 0, 0, 0],
    ...         [0, 0, 0, 0, 0, 0, 0, 0],
    ...         [0, 0, 0, 0, 0, 0, 0, 0],
    ...         [0, 0, 0, 0, 1, 0, 0, 0],
    ...         [0, 0, 0, 0, 1, 0, 0, 0],
    ...         [0, 0, 0, 0, 1, 0, 0, 0],
    ...         [0, 0, 0, 0, 0, 0, 0, 0],
    ...         [0, 0, 0, 0, 0, 0, 0, 0]]

And a sim

    >>> import robosim
    >>> s = robosim.Sim(amap)

And a robot

    >>> import robosim
    >>> robot = robosim.Robot(2, 2)
    >>> s.setrobot(robot)

That now has the map set up

    >>> print(s)
    /--------\
    |00000000|
    |00000000|
    |00R00000|
    |00001000|
    |00001000|
    |00001000|
    |00000000|
    |00000000|
    \--------/

We can use all sorts of sizes for the maps too

    >>> anothermap = [[0, 0, 0, 1, 0, 0, 0, 0],
    ...               [0, 0, 0, 0, 0, 0, 1, 1],
    ...               [0, 0, 1, 0, 0, 0, 0, 0]]
    >>> s2 = robosim.Sim(anothermap)
    >>> s2.setrobot(robosim.Robot(2, 1))
    >>> s2.mapwidth
    8

    >>> s2.mapheight
    3

    >>> print(s2)
    /--------\
    |00010000|
    |00R00011|
    |00100000|
    \--------/

Basic movement
--------------

The robot starts facing upwards so will move that way if sent forwards

    >>> s.robot.forward()
    >>> print(s)
    /--------\
    |00000000|
    |00R00000|
    |00000000|
    |00001000|
    |00001000|
    |00001000|
    |00000000|
    |00000000|
    \--------/

The robot can turn

    >>> s.robot.turnleft45()
    >>> print(s)
    /--------\
    |00000000|
    |00R00000|
    |00000000|
    |00001000|
    |00001000|
    |00001000|
    |00000000|
    |00000000|
    \--------/

    >>> s.robot.forward()
    >>> print(s)
    /--------\
    |0R000000|
    |00000000|
    |00000000|
    |00001000|
    |00001000|
    |00001000|
    |00000000|
    |00000000|
    \--------/


Sensors
-------

The robot has sensors that register that the robot is againsts things
like walls - the map edge is a wall. The sensors are at 45 degrees from
center on the front, face on collisions trigger both.

    >>> s.robot.angle
    315

    >>> s.fixangle(s.robot.angle - 45)
    270

    >>> s.fixangle(s.robot.angle + 45)
    0

    >>> s.location(s.robot.x, s.robot.y, 315)
    (0, -1)

    >>> s.location(s.robot.x, s.robot.y, 270)
    (0, 0)

    >>> s.location(s.robot.x, s.robot.y, 0)
    (1, -1)

    >>> s.robot.hit
    [False, True]

    >>> s.robot.turnright45()
    >>> s.robot.hit
    [True, True]


Walls
-----

You can't go through the edge of the map

    >>> s.robot.x, s.robot.y
    (1, 0)

    >>> s.robot.forward()
    >>> s.robot.x, s.robot.y
    (1, 0)

    >>> s.robot.turnright90();
    >>> s.robot.turnright45();
    >>> s.robot.forward()
    >>> s.robot.forward()
    >>> s.robot.x, s.robot.y
    (3, 2)

    >>> s.robot.forward()
    >>> s.robot.x, s.robot.y
    (3, 2)

    >>> s.robot.hit
    [True, True]

    >>> s.robot.turnleft45()
    >>> s.robot.hit
    [False, True]


Simulation
----------

    >>> import random
    >>> random.seed(0)
    >>> locs = []
    >>> for i in range(20):
    ...     hits = s.robot.hit
    ...     if hits[0] and hits[1]:
    ...         s.robot.turn180()
    ...     elif hits[0]:
    ...         s.robot.turnright90()
    ...     elif hits[1]:
    ...         s.robot.turnleft90()
    ...     elif random.random() > 0.75:
    ...         s.robot.turnright45()
    ...     s.robot.forward()
    ...     locs.append((s.robot.x, s.robot.y))

    >>> locs
    [(3, 1), (4, 0), (5, 1), (5, 2), (6, 2), (7, 2), (6, 2), (5, 2), (5, 1), (5, 0), (5, 1), (5, 2), (6, 2), (7, 3), (6, 4), (5, 5), (6, 6), (7, 7), (6, 6), (5, 5)]
